{"remainingRequest":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/morganhartman/CS 260/lab-5-littlemisshartman/src/views/Photo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/src/views/Photo.vue","mtime":1555361022504},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\n\nexport default {\n    name: 'photo',\n    data: function () {\n        return {\n            newComment: \"\",\n            error: \"\",\n        }\n    },\n    async created () {\n        console.log(this.$route.params);\n        await this.$store.dispatch(\"getUser\");\n        await this.$store.dispatch(\"getMyPhoto\", this.$route.params.id);\n        await this.$store.dispatch(\"getMyComments\", this.$route.params.id);\n    },\n    methods: {\n        formatDate(date) {\n            if (moment(date).diff(Date.now(), 'days') < 15)\n                return moment(date).fromNow();\n            else\n                return moment(date).format('d MMMM YYYY');\n        },\n        async addComment() {\n            try {\n                if (this.user && this.photo) {\n                    if (this.newComment) {\n                        this.error = await this.$store.dispatch(\"addComment\", {\n                            user: this.user,\n                            photo: this.photo,\n                            text: this.newComment\n                        });\n                        this.newComment = \"\";\n                        await this.$store.dispatch(\"getMyComments\", this.$route.params.id);\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            } \n        }\n    },\n    computed: {\n        comments: function () {\n            return this.$store.state.comments;\n        },\n        user() {\n            return this.$store.state.user;\n        },\n        photo() {\n            //console.log(this.$store.state.photo);\n            return this.$store.state.photo;\n        },\n    },\n}\n",{"version":3,"sources":["Photo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Photo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"image\" v-if=\"photo\">\n    <h2 class=\"photoTitle\">{{photo.title}}</h2>\n    <img :src=\"photo.path\" />\n    <p class=\"photoDate\">\n        <span v-if=\"photo.user && photo.user.name\">{{photo.user.name}}, </span>\n        {{formatDate(photo.created)}} \n    </p>\n    <p>{{photo.description}}</p>\n    <div>\n    <p></p>\n    <h3>Comments</h3>\n    <p v-if=\"comments.length === 0\">No comments</p>\n\n    <div class=\"image\" v-for=\"comment in comments\" v-bind:key=\"comment._id\">\n        <p class=\"commentText\">{{ comment.text }}</p>\n        <p class=\"commentName\">{{ comment.user.name }}</p>\n        <p class=\"photoDate\">\n        <span v-if=\"comment.user.name\">{{comment.user.name}}, </span>\n        {{formatDate(comment.created)}}\n        </p>\n    </div>\n    <p></p>\n    <p></p>\n    <form v-if=\"user\" @submit.prevent=\"addComment\">\n        <h3>Add a comment</h3>\n        <input v-model=\"newComment\" placeholder=\"Comment\">\n        <p></p>\n        <button type=\"submit\" class=\"pure-button pure-button-secondary\">Submit</button>\n    </form>\n    </div>\n</div>\n\n</template>\n\n\n<script>\nimport moment from 'moment';\n\nexport default {\n    name: 'photo',\n    data: function () {\n        return {\n            newComment: \"\",\n            error: \"\",\n        }\n    },\n    async created () {\n        console.log(this.$route.params);\n        await this.$store.dispatch(\"getUser\");\n        await this.$store.dispatch(\"getMyPhoto\", this.$route.params.id);\n        await this.$store.dispatch(\"getMyComments\", this.$route.params.id);\n    },\n    methods: {\n        formatDate(date) {\n            if (moment(date).diff(Date.now(), 'days') < 15)\n                return moment(date).fromNow();\n            else\n                return moment(date).format('d MMMM YYYY');\n        },\n        async addComment() {\n            try {\n                if (this.user && this.photo) {\n                    if (this.newComment) {\n                        this.error = await this.$store.dispatch(\"addComment\", {\n                            user: this.user,\n                            photo: this.photo,\n                            text: this.newComment\n                        });\n                        this.newComment = \"\";\n                        await this.$store.dispatch(\"getMyComments\", this.$route.params.id);\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            } \n        }\n    },\n    computed: {\n        comments: function () {\n            return this.$store.state.comments;\n        },\n        user() {\n            return this.$store.state.user;\n        },\n        photo() {\n            //console.log(this.$store.state.photo);\n            return this.$store.state.photo;\n        },\n    },\n}\n</script>"]}]}