{"remainingRequest":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/morganhartman/CS 260/lab-5-littlemisshartman/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/src/components/Comments.vue","mtime":1555086129270},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/morganhartman/CS 260/lab-5-littlemisshartman/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\n\nexport default {\n    name: 'Comments',\n    props: [\n        'comments',\n        'photo',\n    ],\n    data: function  () {\n        return {\n            newComment: \"\",\n            error: \"\"\n        }\n    },\n    methods: {\n        formatDate(date) {\n            if (moment(date).diff(Date.now(), 'days') < 15)\n                return moment(date).fromNow();\n            else\n                return moment(date).format('d MMMM YYYY');\n        },\n        async addComment() {\n            try {\n                if (this.user && this.photo) {\n                    if (this.newComment) {\n                        this.error = await this.$store.dispatch(\"addComment\", {\n                            user: this.user,\n                            photo: this.photo,\n                            text: this.newComment\n                        });\n                        if (this.error === \"\")\n                        this.$router.push('mypage');\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            } \n        }\n    },\n    async created () {\n        await this.$store.dispatch(\"getMyComments\", this.photo._id);\n    },\n    computed: {\n        user() {\n            return this.$store.state.user;\n        },\n    }\n}\n",{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <div class=\"image\" v-for=\"comment in comments\" v-bind:key=\"comment._id\">\n        <p class=\"commentText\">{{ comment.text }}</p>\n        <p class=\"photoDate\">\n        <span v-if=\"comment.user.name\">{{comment.user.name}}, </span>\n        {{formatDate(comment.created)}}\n        </p>\n    </div>\n    <form v-if=\"user\" @submit.prevent=\"addComment\">\n            <input v-model=\"newComment\" placeholder=\"Comment\">\n            <p></p>\n            <button type=\"submit\" class=\"pure-button pure-button-secondary\">Submit</button>\n    </form>\n</div>\n</template>\n\n<script>\nimport moment from 'moment';\n\nexport default {\n    name: 'Comments',\n    props: [\n        'comments',\n        'photo',\n    ],\n    data: function  () {\n        return {\n            newComment: \"\",\n            error: \"\"\n        }\n    },\n    methods: {\n        formatDate(date) {\n            if (moment(date).diff(Date.now(), 'days') < 15)\n                return moment(date).fromNow();\n            else\n                return moment(date).format('d MMMM YYYY');\n        },\n        async addComment() {\n            try {\n                if (this.user && this.photo) {\n                    if (this.newComment) {\n                        this.error = await this.$store.dispatch(\"addComment\", {\n                            user: this.user,\n                            photo: this.photo,\n                            text: this.newComment\n                        });\n                        if (this.error === \"\")\n                        this.$router.push('mypage');\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            } \n        }\n    },\n    async created () {\n        await this.$store.dispatch(\"getMyComments\", this.photo._id);\n    },\n    computed: {\n        user() {\n            return this.$store.state.user;\n        },\n    }\n}\n</script>\n\n<style scoped>\n.photoTitle {\n  margin: 0px;\n  font-size: 1.2em;\n}\n\n.photoDate {\n  margin: 0px;\n  font-size: 0.9em;\n  font-weight: normal;\n}\n\np {\n  margin: 0px;\n}\n\n.image {\n  margin: 0 0 1.5em;\n  display: inline-block;\n  width: 100%;\n}\n\n.image img {\n  max-width: 600px;\n  max-height: 600px;\n  image-orientation: from-image;\n}\n</style>"]}]}